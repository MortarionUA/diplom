package com.gmail.dmytro.ui.view.orderedit;

import com.gmail.dmytro.backend.data.Incoterms;
import com.sun.javafx.scene.control.skin.DoubleFieldSkin;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.annotations.PropertyId;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CssLayout;
import com.vaadin.ui.DateField;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.declarative.Design;

/** 
 * !! DO NOT EDIT THIS FILE !!
 * 
 * This class is generated by Vaadin Designer and will be overwritten.
 * 
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class OrderEditViewDesign extends VerticalLayout {
	protected HorizontalLayout reportHeader;
	protected Label orderId;
	protected Label stateLabel;
	protected OrderStateSelect state;
	protected TextField orderNo;
	protected IncotermsSelect incoterms;
	protected DateField createDate;
	protected ComboBox<java.time.LocalTime> createTime;
	protected DateField pickupDate;
	protected DateField deliveryDate;
	@PropertyId("delivery.name")
	protected TextField deliveryName;
	@PropertyId("delivery.country")
	protected TextField deliveryCountry;
	@PropertyId("delivery.region")
	protected TextField deliveryRegion;
	@PropertyId("delivery.city")
	protected TextField deliveryCity;
	@PropertyId("delivery.postal")
	protected TextField deliveryPostal;
	@PropertyId("delivery.address")
	protected TextField deliveryAddress;
	@PropertyId("pickup.name")
	protected TextField pickupName;
	@PropertyId("pickup.country")
	protected TextField pickupCountry;
	@PropertyId("pickup.region")
	protected TextField pickupRegion;
	@PropertyId("pickup.city")
	protected TextField pickupCity;
	@PropertyId("pickup.postal")
	protected TextField pickupPostal;
	@PropertyId("pickup.address")
	protected TextField pickupAddress;
	@PropertyId("customer.fullName")
	protected TextField fullName;
	@PropertyId("customer.phoneNumber")
	protected TextField phone;
	@PropertyId("customer.details")
	protected TextField details;


	protected PortComboBox loadPort;
	protected PortComboBox unloadPort;
	protected CssLayout productInfoContainer;
	protected Button addItems;
	protected Label total;
	protected Label freight;

	protected CssLayout bookingItems;

	protected CssLayout equipmentInfoContainer;
	protected Button addEqipmentInfos;

	protected CssLayout detail;
	@PropertyId("booking.bookingNumber")
	protected TextField bookingNumber;
	@PropertyId("booking.loadPort")
	protected PortComboBox bookedLoadPort;
	@PropertyId("booking.unloadPort")
	protected PortComboBox bookedUnloadPort;
	@PropertyId("booking.carrier")
	protected CarrierComboBox bookedCarrier;
	@PropertyId("booking.pickupDate")
	protected DateField bookedPickupDate;
	@PropertyId("booking.pickupTime")
	protected ComboBox<java.time.LocalTime> bookedPickupTime;
	@PropertyId("booking.deliveryDate")
	protected DateField bookedDeliveryDate;
	@PropertyId("booking.deliveryTime")
	protected ComboBox<java.time.LocalTime> bookedDeliveryTime;
	@PropertyId("booking.cutOffDate")
	protected DateField cutOffDate;
	@PropertyId("booking.cutOffTime")
	protected ComboBox<java.time.LocalTime> cutOffTime;
	protected TextField voyageNumber;
	protected TextField vesselName;
	protected TextField vesselFlag;
	protected TextField freightCost;

	protected OrderHistory history;
	protected Button cancel;
	protected Button ok;

	public OrderEditViewDesign() {
		Design.read(this);
	}
}
